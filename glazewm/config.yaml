general:
  # # Commands to run when the WM has started (e.g. to run a script or launch
  # # another application). Here we are running a batch script to start Zebar.
  # startup_commands: ['shell-exec zebar']

  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: false

  # Whether to switch back and forth between the previously focused
  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: false

  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true

    # Trigger for cursor jump:
    # - 'monitor_focus': Jump when focus changes between monitors.
    # - 'window_focus': Jump when focus changes between windows.
    trigger: 'monitor_focus'

gaps:
  # Gap between adjacent windows.
  inner_gap: '20px'

  # Gap between windows and the screen edge.
  outer_gap:
    top: '30px'
    right: '30px'
    bottom: '30px'
    left: '30px'

window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: '#ca9ee6'

  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: true
      color: '#a1a1a1'

window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: 'tiling', 'floating'.
  initial_state: 'tiling'

  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: false

      # Whether to show floating windows as always on top.
      shown_on_top: false

    fullscreen:
      # Maximize the window if possible. If the window doesn't have a
      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: false

      # Whether to show fullscreen windows as always on top.
      shown_on_top: false

# These must be kept in sync with the workspace-list.ts defined in zebar
workspaces:
  - name: '1-1'
    display_name: '1'
    bind_to_monitor: 1
  - name: '1-2'
    display_name: '2'
    bind_to_monitor: 1
  - name: '1-3'
    display_name: '3'
    bind_to_monitor: 1
  - name: '1-4'
    display_name: '4'
    bind_to_monitor: 1
  - name: '1-5'
    display_name: '5'
    bind_to_monitor: 1
  - name: '1-6'
    display_name: '6'
    bind_to_monitor: 1
  - name: '1-7'
    display_name: '7'
    bind_to_monitor: 1
  - name: '1-8'
    display_name: '8'
    bind_to_monitor: 1

  - name: '2-1'
    display_name: '1'
    bind_to_monitor: 0
  - name: '2-2'
    display_name: '2'
    bind_to_monitor: 0
  - name: '2-3'
    display_name: '3'
    bind_to_monitor: 0
  - name: '2-4'
    display_name: '4'
    bind_to_monitor: 0
  - name: '2-5'
    display_name: '5'
    bind_to_monitor: 0
  - name: '2-6'
    display_name: '6'
    bind_to_monitor: 0
  - name: '2-7'
    display_name: '7'
    bind_to_monitor: 0
  - name: '2-8'
    display_name: '8'
    bind_to_monitor: 0

window_rules:
  - commands: ['ignore']
    match:
      # Ignores any Zebar windows.
      - window_process: { equals: 'zebar' }

      # Ignores picture-in-picture windows for browsers.
      - window_title: { regex: '[Pp]icture.in.[Pp]icture' }
        window_class: { regex: 'Chrome_WidgetWin_1|MozillaDialogClass' }

      - window_process: { regex: 'Taskmgr|ScreenClippingHost' }

      # Ignore rules for various 3rd-party apps.
      - window_process: { equals: 'PowerToys.PowerAccent' }
      - window_process: { equals: 'Lively' }
        window_class: { regex: 'HwndWrapper*' }
      - window_process: { regex: '.*PotPlayer.*' }
      - window_title: { regex: '.*GoogleDriveFS.*' }

  - commands: ['set-floating']
    match:
      # Steam friends list
      - window_title: { equals: 'Friends List' }
      - window_title: { equals: 'Solitaire & Casual Games' }
      - window_title: { regex: '.*Yomitan Search' }
      - window_title: { regex: 'Sticky Notes.*' }

  - commands: ['move --workspace 2-2']
    match:
      - window_process: { equals: 'Discord' }

  - commands: ['move --workspace 2-5', 'focus --workspace 2-5']
    match:
      - window_process: { equals: 'Spotify' }

  - commands: ['move --workspace 1-2', 'focus --workspace 1-2']
    match:
      - window_title: { regex: '.*Visual Studio Code' }
      - window_process: { regex: '.*webstorm.*' }
      - window_process: { regex: '.*jetbrains.*' }

binding_modes:
  #   # When enabled, the focused window can be resized via arrow keys or HJKL.
  #   - name: 'resize'
  #     keybindings:
  #       - commands: ['resize --width -2%']
  #         bindings: ['h', 'left']
  #       - commands: ['resize --width +2%']
  #         bindings: ['l', 'right']
  #       - commands: ['resize --height +2%']
  #         bindings: ['k', 'up']
  #       - commands: ['resize --height -2%']
  #         bindings: ['j', 'down']
  #       # Press enter/escape to return to default keybindings.
  #       - commands: ['wm-disable-binding-mode --name resize']
  #         bindings: ['escape', 'enter']

  # When enabled, all keybindings are disabled except for alt+shift+p which
  # returns to default keybindings.
  - name: 'pause'
    keybindings:
      - commands: ['wm-disable-binding-mode --name pause']
        bindings: ['alt+shift+p']

keybindings:
  # Shift focus in a given direction.
  - commands: ['focus --direction left']
    bindings: ['alt+h']
  - commands: ['focus --direction right']
    bindings: ['alt+l']
  - commands: ['focus --direction up']
    bindings: ['alt+k']
  - commands: ['focus --direction down']
    bindings: ['alt+j']

  # Move focused window in a given direction.
  - commands: ['move --direction left']
    bindings: ['alt+shift+h']
  - commands: ['move --direction right']
    bindings: ['alt+shift+l']
  - commands: ['move --direction up']
    bindings: ['alt+shift+k']
  - commands: ['move --direction down']
    bindings: ['alt+shift+j']

  # Resize focused window by a percentage or pixel amount.
  - commands: ['resize --width -2%']
    bindings: ['alt+i']
  - commands: ['resize --width +2%']
    bindings: ['alt+u']
  - commands: ['resize --height +2%']
    bindings: ['alt+o']
  - commands: ['resize --height -2%']
    bindings: ['alt+p']

  # # As an alternative to the resize keybindings above, resize mode enables
  # # resizing via arrow keys or HJKL. The binding mode is defined above with
  # # the name 'resize'.
  # - commands: ['wm-enable-binding-mode --name resize']
  #   bindings: ['alt+r']

  # Disables all keybindings until alt+shift+p is pressed again.
  - commands: ['wm-enable-binding-mode --name pause']
    bindings: ['alt+shift+p']

  # Change tiling direction. This determines where new tiling windows will
  # be inserted.
  - commands: ['toggle-tiling-direction']
    bindings: ['alt+v']

  # Change focus from tiling windows -> floating -> fullscreen.
  - commands: ['wm-cycle-focus']
    bindings: ['alt+space']

  # Change the focused window to be floating.
  - commands: ['toggle-floating --centered']
    bindings: ['alt+shift+space']

  # Change the focused window to be tiling.
  - commands: ['toggle-tiling']
    bindings: ['alt+t']

  # Change the focused window to be fullscreen.
  - commands: ['toggle-fullscreen']
    bindings: ['alt+shift+f']

  # Minimize focused window.
  - commands: ['toggle-minimized']
    bindings: ['alt+shift+m']

  # Close focused window.
  - commands: ['close']
    bindings: ['alt+shift+q']

  # Kill GlazeWM process safely.
  - commands: ['wm-exit']
    bindings: ['alt+shift+e']

  # Re-evaluate configuration file.
  - commands: ['wm-reload-config']
    bindings: ['alt+shift+r']

  # Redraw all windows.
  - commands: ['wm-redraw']
    bindings: ['alt+shift+w']

  # Launch CMD terminal. Alternatively, use `shell-exec wt` or
  # `shell-exec %ProgramFiles%/Git/git-bash.exe` to start Windows
  # Terminal and Git Bash respectively.
  # - commands: ['shell-exec cmd']
  #   bindings: ['alt+enter']

  - commands:
      ['shell-exec %ProgramFiles(x86)%\Microsoft\Edge\Application\msedge.exe']
    bindings: ['alt+e']

  # # Focus the next/previous workspace defined in `workspaces` config.
  # - commands: ['focus --next-workspace']
  #   bindings: ['alt+s']
  # - commands: ['focus --prev-workspace']
  #   bindings: ['alt+a']

  # # Focus the workspace that last had focus.
  # - commands: ['focus --recent-workspace']
  #   bindings: ['alt+d']

  # Change focus to a workspace defined in `workspaces` config.
  - commands: ['focus --workspace 1-1']
    bindings: ['alt+1']
  - commands: ['focus --workspace 1-2']
    bindings: ['alt+2']
  - commands: ['focus --workspace 1-3']
    bindings: ['alt+3']
  - commands: ['focus --workspace 1-4']
    bindings: ['alt+4']
  - commands: ['focus --workspace 1-5']
    bindings: ['alt+5']
  - commands: ['focus --workspace 1-6']
    bindings: ['alt+6']
  - commands: ['focus --workspace 1-7']
    bindings: ['alt+7']
  - commands: ['focus --workspace 1-8']
    bindings: ['alt+8']
  - commands: ['focus --workspace 2-1']
    bindings: ['alt+control+1']
  - commands: ['focus --workspace 2-2']
    bindings: ['alt+control+2']
  - commands: ['focus --workspace 2-3']
    bindings: ['alt+control+3']
  - commands: ['focus --workspace 2-4']
    bindings: ['alt+control+4']
  - commands: ['focus --workspace 2-5']
    bindings: ['alt+control+5']
  - commands: ['focus --workspace 2-6']
    bindings: ['alt+control+6']
  - commands: ['focus --workspace 2-7']
    bindings: ['alt+control+7']
  - commands: ['focus --workspace 2-8']
    bindings: ['alt+control+8']

  # Move the focused window's parent workspace to a monitor in a given
  # direction.
  - commands: ['move-workspace --direction up']
    bindings: ['alt+shift+control+k']
  - commands: ['move-workspace --direction down']
    bindings: ['alt+shift+control+j']

  # Move focused window to a workspace defined in `workspaces` config.
  - commands: ['move --workspace 1-1', 'focus --workspace 1-1']
    bindings: ['alt+shift+1']
  - commands: ['move --workspace 1-2', 'focus --workspace 1-2']
    bindings: ['alt+shift+2']
  - commands: ['move --workspace 1-3', 'focus --workspace 1-3']
    bindings: ['alt+shift+3']
  - commands: ['move --workspace 1-4', 'focus --workspace 1-4']
    bindings: ['alt+shift+4']
  - commands: ['move --workspace 1-5', 'focus --workspace 1-5']
    bindings: ['alt+shift+5']
  - commands: ['move --workspace 1-6', 'focus --workspace 1-6']
    bindings: ['alt+shift+6']
  - commands: ['move --workspace 1-7', 'focus --workspace 1-7']
    bindings: ['alt+shift+7']
  - commands: ['move --workspace 1-8', 'focus --workspace 1-8']
    bindings: ['alt+shift+8']
  - commands: ['move --workspace 2-1', 'focus --workspace 2-1']
    bindings: ['alt+shift+control+1']
  - commands: ['move --workspace 2-2', 'focus --workspace 2-2']
    bindings: ['alt+shift+control+2']
  - commands: ['move --workspace 2-3', 'focus --workspace 2-3']
    bindings: ['alt+shift+control+3']
  - commands: ['move --workspace 2-4', 'focus --workspace 2-4']
    bindings: ['alt+shift+control+4']
  - commands: ['move --workspace 2-5', 'focus --workspace 2-5']
    bindings: ['alt+shift+control+5']
  - commands: ['move --workspace 2-6', 'focus --workspace 2-6']
    bindings: ['alt+shift+control+6']
  - commands: ['move --workspace 2-7', 'focus --workspace 2-7']
    bindings: ['alt+shift+control+7']
  - commands: ['move --workspace 2-8', 'focus --workspace 2-8']
    bindings: ['alt+shift+control+8']
